- [X] Use jQuery for implementing new requirements
 <br>
- [ ] Include a show resource rendered using jQuery and an Active Model Serialization JSON backend.
<br>
- [ ] Include an index resource rendered using jQuery and an Active Model Serialization JSON backend.
<br>
- [ ] Include at least one has_many relationship in information rendered via JSON and appended to the DOM.
<br>
- [ ] Use your Rails API and a form to create a resource and render the response without a page refresh.
<br>
- [ ] Translate JSON responses into js model objects.
<br>
- [ ] At least one of the js model objects must have at least one method added by your code to the prototype.
<br>

<div class="center">
  <h1><%= @group.name %></h1>
  <h3><%= @group.description %></h3>
  <div class="left">
    <p><%= link_to "Create a Meetup for this Group", new_group_meetup_path(@group)%></p>
  </div>
  <div class="show-meetups right">
      <a id="show-meetups" href="/groups/<%= @group.id %>/meetups" data-id="<%= @group.id %>">SHOW ALL MEETUPS!</a>
  </div>

</div>

<div class="comments"><br><br>
  <h3>Comments</h3>
  <%  UserGroup.group_comments("#{@group.id}").each do |association| %>
      <%= User.chop_email(association.user_id) %> says  <%= association.comment %><br>
  <% end %>
</div>

<div class="">
  <h3>leave a comment here</h3>
  <%= form_tag "/user_group/comment", :method => :post do %>
    <%= text_area_tag "comment" %>
    <%= hidden_field_tag :group_id, @group.id %>
    <%= hidden_field_tag :user_id, user_id %>
    <%= submit_tag "comment" %>
  <% end %>
</div>
